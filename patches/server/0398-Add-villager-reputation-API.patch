From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mariell Hoversholm <proximyst@proximyst.com>
Date: Wed, 22 Apr 2020 23:29:20 +0200
Subject: [PATCH] Add villager reputation API

== AT ==
public net.minecraft.world.entity.ai.gossip.GossipContainer$EntityGossips
public net.minecraft.world.entity.ai.gossip.GossipContainer$EntityGossips <init>()V
public net.minecraft.world.entity.ai.gossip.GossipContainer gossips

diff --git a/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java b/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
index a28f359202e6502c6ea5e9c918ec0b3e9a3fca61..f3ffb28862cf3e1576d30eb85d6306aad1231648 100644
--- a/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
+++ b/src/main/java/net/minecraft/world/entity/ai/gossip/GossipContainer.java
@@ -231,6 +231,43 @@ public class GossipContainer {
         public void remove(GossipType gossipType) {
             this.entries.removeInt(gossipType);
         }
+
+        // Paper start - Add villager reputation API
+        private static final GossipType[] TYPES = GossipType.values();
+        public io.papermc.paper.entity.villager.Reputation getPaperReputation() {
+            Map<io.papermc.paper.entity.villager.ReputationType, Integer> map = new java.util.EnumMap<>(io.papermc.paper.entity.villager.ReputationType.class);
+            for (Object2IntMap.Entry<GossipType> type : this.entries.object2IntEntrySet()) {
+                map.put(toApi(type.getKey()), type.getIntValue());
+            }
+
+            return new io.papermc.paper.entity.villager.Reputation(map);
+        }
+
+        public void assignFromPaperReputation(io.papermc.paper.entity.villager.Reputation rep) {
+            for (GossipType type : TYPES) {
+                io.papermc.paper.entity.villager.ReputationType api = toApi(type);
+
+                if (rep.hasReputationSet(api)) {
+                    int reputation = rep.getReputation(api);
+                    if (reputation == 0) {
+                        this.entries.removeInt(type);
+                    } else {
+                        this.entries.put(type, reputation);
+                    }
+                }
+            }
+        }
+
+        private static io.papermc.paper.entity.villager.ReputationType toApi(GossipType type) {
+            return switch (type) {
+                case MAJOR_NEGATIVE -> io.papermc.paper.entity.villager.ReputationType.MAJOR_NEGATIVE;
+                case MINOR_NEGATIVE -> io.papermc.paper.entity.villager.ReputationType.MINOR_NEGATIVE;
+                case MINOR_POSITIVE -> io.papermc.paper.entity.villager.ReputationType.MINOR_POSITIVE;
+                case MAJOR_POSITIVE -> io.papermc.paper.entity.villager.ReputationType.MAJOR_POSITIVE;
+                case TRADING -> io.papermc.paper.entity.villager.ReputationType.TRADING;
+            };
+        }
+        // Paper end
     }
 
     static record GossipEntry(UUID target, GossipType type, int value) {
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
index 4f73b71fb39eab10c44da31617632a83e4f0b83f..49312ba648597af039ab4e615cb2ca338536a26e 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftVillager.java
@@ -17,6 +17,13 @@ import org.bukkit.entity.Villager;
 import org.bukkit.entity.ZombieVillager;
 import org.bukkit.event.entity.CreatureSpawnEvent;
 
+// Paper start
+import io.papermc.paper.entity.villager.Reputation;
+import com.google.common.collect.Maps;
+import java.util.Map;
+import java.util.UUID;
+// Paper end
+
 public class CraftVillager extends CraftAbstractVillager implements Villager {
 
     public CraftVillager(CraftServer server, net.minecraft.world.entity.npc.Villager entity) {
@@ -146,4 +153,45 @@ public class CraftVillager extends CraftAbstractVillager implements Villager {
     public static VillagerProfession bukkitToNmsProfession(Profession bukkit) {
         return BuiltInRegistries.VILLAGER_PROFESSION.get(CraftNamespacedKey.toMinecraft(bukkit.getKey()));
     }
+
+    // Paper start - Add villager reputation API
+    @Override
+    public Reputation getReputation(UUID uniqueId) {
+        net.minecraft.world.entity.ai.gossip.GossipContainer.EntityGossips rep = getHandle().getGossips().gossips.get(uniqueId);
+        if (rep == null) {
+            return new Reputation(new java.util.EnumMap<>(io.papermc.paper.entity.villager.ReputationType.class));
+        }
+
+        return rep.getPaperReputation();
+    }
+
+    @Override
+    public Map<UUID, Reputation> getReputations() {
+        return getHandle().getGossips().gossips.entrySet()
+            .stream()
+            .collect(java.util.stream.Collectors.toMap(Map.Entry::getKey, entry -> entry.getValue().getPaperReputation()));
+    }
+
+    @Override
+    public void setReputation(UUID uniqueId, Reputation reputation) {
+        net.minecraft.world.entity.ai.gossip.GossipContainer.EntityGossips nmsReputation =
+            getHandle().getGossips().gossips.computeIfAbsent(
+                uniqueId,
+                key -> new net.minecraft.world.entity.ai.gossip.GossipContainer.EntityGossips()
+            );
+        nmsReputation.assignFromPaperReputation(reputation);
+    }
+
+    @Override
+    public void setReputations(Map<UUID, Reputation> reputations) {
+        for (Map.Entry<UUID, Reputation> entry : reputations.entrySet()) {
+            setReputation(entry.getKey(), entry.getValue());
+        }
+    }
+
+    @Override
+    public void clearReputations() {
+        getHandle().getGossips().gossips.clear();
+    }
+    // Paper end
 }
